{% extends "js-es6.njk" %}

{% block globalimports %}
import {
  WidgetModel, DOMWidgetModel,
  WidgetView, DOMWidgetView,
  unpack_models, ManagerBase
} from '@jupyter-widgets/base';

import {
  data_union_serialization, array_serialization
} from 'jupyter-dataserializers';
{% endblock %}

{% block imports %}
{{ super() }}


/**
 * Type declaration for general widget serializers.
 *
 * Declared in lieu of proper interface in jupyter-widgets.
 */
export interface ISerializers {
  [key: string]: {
      deserialize?: (value?: any, manager?: ManagerBase<any>) => any;
      serialize?: (value?: any, widget?: WidgetModel) => any;
  };
}
{% endblock %}


{% block widgetbody %}
  defaults() {
    return {...super.defaults(), ... {
      {% if widget.properties %}
      {% for propName, prop in widget.properties %}
      {{ propName }}: {{ prop.default }},
      {% endfor %}
      {% endif %}
    }};
  }

  static serializers = {
    ...{{ widget.inherits[0] }}Model.serializers,
    {% for key, serializer in widget.serializers %}
    {{ key }}: {{ serializer }},
    {% endfor %}
  }
{% endblock %}
